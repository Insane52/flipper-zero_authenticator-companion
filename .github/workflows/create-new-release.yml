name: Create new release

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: 'New version'
        required: true
        type: string

jobs:
  set-new-version:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{steps.commit_new_version.outputs.commit_hash}}
    steps:
      - uses: actions/checkout@v3

      - name: Set new version format
        run: |
          if [[ "${{ inputs.new_version }}" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; 
          then 
            echo "New version looks okay";
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            sed -r -i "s/\"version\": *\"[0-9]+\\.[0-9]+\\.[0-9]+\"/\"version\": \"$MAJOR.$MINOR.$PATCH\"/g" package.json
          else 
            echo "Invalid version format";
            exit 1
          fi

      - id: commit_new_version
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          commit_message: Updated version
          push_options: '--force'

  create-release:
    runs-on: ubuntu-latest
    needs: set-new-version
    outputs:
      upload_url: ${{steps.create-release.outputs.upload_url}}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{needs.set-new-version.outputs.commit_hash}}"
          fetch-depth: 0

      - id: create-release
        uses: ncipollo/release-action@v1.12.0
        with:
          bodyFile: ".github/release-body.md"
          artifactErrorsFailBuild: true
          updateOnlyUnreleased: true
          allowUpdates: true
          removeArtifacts: true
          draft: true
          tag: "v${{ inputs.new_version }}"
          commit: "${{needs.set-new-version.outputs.commit_hash}}"
  
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    needs: [set-new-version, create-release]

    env:
      GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{needs.set-new-version.outputs.commit_hash}}"
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
    
      - uses: pnpm/action-setup@v2.4.0
        name: Install pnpm
        with:
          version: latest
          run_install: false
          standalone: true

      - name: Install dependencies
        run: |
          pnpm config set node-linker hoisted --location project
          pnpm install

      - name: Build
        run: |
          pnpm build
      
      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: |
            dist/*.blockmap
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/latest.yml
            dist/latest-*.yml

  checksum:
    runs-on: ubuntu-latest
    needs: ['create-release', 'build']
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v2.1.1
        with:
          name: release
          path: release
      
      - name: Generate checksum
        uses: jmgilman/actions-generate-checksum@v1.0.0
        with:
          patterns: |
            release/*

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: Fhwang0926/upload-release-asset@v1.1.17
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_name: checksum.txt
